{"id":"node_modules/gifuct-js/lib/index.js","dependencies":[{"name":"E:\\Dev\\fabric.js\\gif_canvas\\package.json","includedInParent":true,"mtime":1716234648000},{"name":"E:\\Dev\\fabric.js\\gif_canvas\\node_modules\\gifuct-js\\package.json","includedInParent":true,"mtime":1716213157948},{"name":"E:\\Dev\\fabric.js\\gif_canvas\\node_modules\\gifuct-js\\.babelrc","includedInParent":true,"mtime":1716213155328},{"name":"js-binary-schema-parser/lib/schemas/gif","loc":{"line":8,"column":42,"index":203},"parent":"E:\\Dev\\fabric.js\\gif_canvas\\node_modules\\gifuct-js\\lib\\index.js","resolved":"E:\\Dev\\fabric.js\\gif_canvas\\node_modules\\js-binary-schema-parser\\lib\\schemas\\gif.js"},{"name":"js-binary-schema-parser","loc":{"line":10,"column":36,"index":285},"parent":"E:\\Dev\\fabric.js\\gif_canvas\\node_modules\\gifuct-js\\lib\\index.js","resolved":"E:\\Dev\\fabric.js\\gif_canvas\\node_modules\\js-binary-schema-parser\\lib\\index.js"},{"name":"js-binary-schema-parser/lib/parsers/uint8","loc":{"line":12,"column":20,"index":334},"parent":"E:\\Dev\\fabric.js\\gif_canvas\\node_modules\\gifuct-js\\lib\\index.js","resolved":"E:\\Dev\\fabric.js\\gif_canvas\\node_modules\\js-binary-schema-parser\\lib\\parsers\\uint8.js"},{"name":"./deinterlace","loc":{"line":14,"column":27,"index":408},"parent":"E:\\Dev\\fabric.js\\gif_canvas\\node_modules\\gifuct-js\\lib\\index.js","resolved":"E:\\Dev\\fabric.js\\gif_canvas\\node_modules\\gifuct-js\\lib\\deinterlace.js"},{"name":"./lzw","loc":{"line":16,"column":19,"index":446},"parent":"E:\\Dev\\fabric.js\\gif_canvas\\node_modules\\gifuct-js\\lib\\index.js","resolved":"E:\\Dev\\fabric.js\\gif_canvas\\node_modules\\gifuct-js\\lib\\lzw.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decompressFrames = exports.decompressFrame = exports.parseGIF = void 0;\n\nvar _gif = _interopRequireDefault(require(\"js-binary-schema-parser/lib/schemas/gif\"));\n\nvar _jsBinarySchemaParser = require(\"js-binary-schema-parser\");\n\nvar _uint = require(\"js-binary-schema-parser/lib/parsers/uint8\");\n\nvar _deinterlace = require(\"./deinterlace\");\n\nvar _lzw = require(\"./lzw\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar parseGIF = function parseGIF(arrayBuffer) {\n  var byteData = new Uint8Array(arrayBuffer);\n  return (0, _jsBinarySchemaParser.parse)((0, _uint.buildStream)(byteData), _gif[\"default\"]);\n};\n\nexports.parseGIF = parseGIF;\n\nvar generatePatch = function generatePatch(image) {\n  var totalPixels = image.pixels.length;\n  var patchData = new Uint8ClampedArray(totalPixels * 4);\n\n  for (var i = 0; i < totalPixels; i++) {\n    var pos = i * 4;\n    var colorIndex = image.pixels[i];\n    var color = image.colorTable[colorIndex];\n    patchData[pos] = color[0];\n    patchData[pos + 1] = color[1];\n    patchData[pos + 2] = color[2];\n    patchData[pos + 3] = colorIndex !== image.transparentIndex ? 255 : 0;\n  }\n\n  return patchData;\n};\n\nvar decompressFrame = function decompressFrame(frame, gct, buildImagePatch) {\n  if (!frame.image) {\n    console.warn('gif frame does not have associated image.');\n    return;\n  }\n\n  var image = frame.image; // get the number of pixels\n\n  var totalPixels = image.descriptor.width * image.descriptor.height; // do lzw decompression\n\n  var pixels = (0, _lzw.lzw)(image.data.minCodeSize, image.data.blocks, totalPixels); // deal with interlacing if necessary\n\n  if (image.descriptor.lct.interlaced) {\n    pixels = (0, _deinterlace.deinterlace)(pixels, image.descriptor.width);\n  }\n\n  var resultImage = {\n    pixels: pixels,\n    dims: {\n      top: frame.image.descriptor.top,\n      left: frame.image.descriptor.left,\n      width: frame.image.descriptor.width,\n      height: frame.image.descriptor.height\n    }\n  }; // color table\n\n  if (image.descriptor.lct && image.descriptor.lct.exists) {\n    resultImage.colorTable = image.lct;\n  } else {\n    resultImage.colorTable = gct;\n  } // add per frame relevant gce information\n\n\n  if (frame.gce) {\n    resultImage.delay = (frame.gce.delay || 10) * 10; // convert to ms\n\n    resultImage.disposalType = frame.gce.extras.disposal; // transparency\n\n    if (frame.gce.extras.transparentColorGiven) {\n      resultImage.transparentIndex = frame.gce.transparentColorIndex;\n    }\n  } // create canvas usable imagedata if desired\n\n\n  if (buildImagePatch) {\n    resultImage.patch = generatePatch(resultImage);\n  }\n\n  return resultImage;\n};\n\nexports.decompressFrame = decompressFrame;\n\nvar decompressFrames = function decompressFrames(parsedGif, buildImagePatches) {\n  return parsedGif.frames.filter(function (f) {\n    return f.image;\n  }).map(function (f) {\n    return decompressFrame(f, parsedGif.gct, buildImagePatches);\n  });\n};\n\nexports.decompressFrames = decompressFrames;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/gifuct-js/lib/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}}],"sources":{"node_modules/gifuct-js/lib/index.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decompressFrames = exports.decompressFrame = exports.parseGIF = void 0;\n\nvar _gif = _interopRequireDefault(require(\"js-binary-schema-parser/lib/schemas/gif\"));\n\nvar _jsBinarySchemaParser = require(\"js-binary-schema-parser\");\n\nvar _uint = require(\"js-binary-schema-parser/lib/parsers/uint8\");\n\nvar _deinterlace = require(\"./deinterlace\");\n\nvar _lzw = require(\"./lzw\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar parseGIF = function parseGIF(arrayBuffer) {\n  var byteData = new Uint8Array(arrayBuffer);\n  return (0, _jsBinarySchemaParser.parse)((0, _uint.buildStream)(byteData), _gif[\"default\"]);\n};\n\nexports.parseGIF = parseGIF;\n\nvar generatePatch = function generatePatch(image) {\n  var totalPixels = image.pixels.length;\n  var patchData = new Uint8ClampedArray(totalPixels * 4);\n\n  for (var i = 0; i < totalPixels; i++) {\n    var pos = i * 4;\n    var colorIndex = image.pixels[i];\n    var color = image.colorTable[colorIndex];\n    patchData[pos] = color[0];\n    patchData[pos + 1] = color[1];\n    patchData[pos + 2] = color[2];\n    patchData[pos + 3] = colorIndex !== image.transparentIndex ? 255 : 0;\n  }\n\n  return patchData;\n};\n\nvar decompressFrame = function decompressFrame(frame, gct, buildImagePatch) {\n  if (!frame.image) {\n    console.warn('gif frame does not have associated image.');\n    return;\n  }\n\n  var image = frame.image; // get the number of pixels\n\n  var totalPixels = image.descriptor.width * image.descriptor.height; // do lzw decompression\n\n  var pixels = (0, _lzw.lzw)(image.data.minCodeSize, image.data.blocks, totalPixels); // deal with interlacing if necessary\n\n  if (image.descriptor.lct.interlaced) {\n    pixels = (0, _deinterlace.deinterlace)(pixels, image.descriptor.width);\n  }\n\n  var resultImage = {\n    pixels: pixels,\n    dims: {\n      top: frame.image.descriptor.top,\n      left: frame.image.descriptor.left,\n      width: frame.image.descriptor.width,\n      height: frame.image.descriptor.height\n    }\n  }; // color table\n\n  if (image.descriptor.lct && image.descriptor.lct.exists) {\n    resultImage.colorTable = image.lct;\n  } else {\n    resultImage.colorTable = gct;\n  } // add per frame relevant gce information\n\n\n  if (frame.gce) {\n    resultImage.delay = (frame.gce.delay || 10) * 10; // convert to ms\n\n    resultImage.disposalType = frame.gce.extras.disposal; // transparency\n\n    if (frame.gce.extras.transparentColorGiven) {\n      resultImage.transparentIndex = frame.gce.transparentColorIndex;\n    }\n  } // create canvas usable imagedata if desired\n\n\n  if (buildImagePatch) {\n    resultImage.patch = generatePatch(resultImage);\n  }\n\n  return resultImage;\n};\n\nexports.decompressFrame = decompressFrame;\n\nvar decompressFrames = function decompressFrames(parsedGif, buildImagePatches) {\n  return parsedGif.frames.filter(function (f) {\n    return f.image;\n  }).map(function (f) {\n    return decompressFrame(f, parsedGif.gct, buildImagePatches);\n  });\n};\n\nexports.decompressFrames = decompressFrames;"},"lineCount":105}},"error":null,"hash":"72fbc78dabf6f687b1910f5cbe420a57","cacheData":{"env":{}}}