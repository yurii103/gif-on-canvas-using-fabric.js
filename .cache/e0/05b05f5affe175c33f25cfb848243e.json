{"id":"node_modules/gifuct-js/lib/lzw.js","dependencies":[{"name":"E:\\Dev\\fabric.js\\gif_canvas\\package.json","includedInParent":true,"mtime":1716234648000},{"name":"E:\\Dev\\fabric.js\\gif_canvas\\node_modules\\gifuct-js\\package.json","includedInParent":true,"mtime":1716213157948},{"name":"E:\\Dev\\fabric.js\\gif_canvas\\node_modules\\gifuct-js\\.babelrc","includedInParent":true,"mtime":1716213155328}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.lzw = void 0;\n\n/**\r\n * javascript port of java LZW decompression\r\n * Original java author url: https://gist.github.com/devunwired/4479231\r\n */\nvar lzw = function lzw(minCodeSize, data, pixelCount) {\n  var MAX_STACK_SIZE = 4096;\n  var nullCode = -1;\n  var npix = pixelCount;\n  var available, clear, code_mask, code_size, end_of_information, in_code, old_code, bits, code, i, datum, data_size, first, top, bi, pi;\n  var dstPixels = new Array(pixelCount);\n  var prefix = new Array(MAX_STACK_SIZE);\n  var suffix = new Array(MAX_STACK_SIZE);\n  var pixelStack = new Array(MAX_STACK_SIZE + 1); // Initialize GIF data stream decoder.\n\n  data_size = minCodeSize;\n  clear = 1 << data_size;\n  end_of_information = clear + 1;\n  available = clear + 2;\n  old_code = nullCode;\n  code_size = data_size + 1;\n  code_mask = (1 << code_size) - 1;\n\n  for (code = 0; code < clear; code++) {\n    prefix[code] = 0;\n    suffix[code] = code;\n  } // Decode GIF pixel stream.\n\n\n  var datum, bits, count, first, top, pi, bi;\n  datum = bits = count = first = top = pi = bi = 0;\n\n  for (i = 0; i < npix;) {\n    if (top === 0) {\n      if (bits < code_size) {\n        // get the next byte\n        datum += data[bi] << bits;\n        bits += 8;\n        bi++;\n        continue;\n      } // Get the next code.\n\n\n      code = datum & code_mask;\n      datum >>= code_size;\n      bits -= code_size; // Interpret the code\n\n      if (code > available || code == end_of_information) {\n        break;\n      }\n\n      if (code == clear) {\n        // Reset decoder.\n        code_size = data_size + 1;\n        code_mask = (1 << code_size) - 1;\n        available = clear + 2;\n        old_code = nullCode;\n        continue;\n      }\n\n      if (old_code == nullCode) {\n        pixelStack[top++] = suffix[code];\n        old_code = code;\n        first = code;\n        continue;\n      }\n\n      in_code = code;\n\n      if (code == available) {\n        pixelStack[top++] = first;\n        code = old_code;\n      }\n\n      while (code > clear) {\n        pixelStack[top++] = suffix[code];\n        code = prefix[code];\n      }\n\n      first = suffix[code] & 0xff;\n      pixelStack[top++] = first; // add a new string to the table, but only if space is available\n      // if not, just continue with current table until a clear code is found\n      // (deferred clear code implementation as per GIF spec)\n\n      if (available < MAX_STACK_SIZE) {\n        prefix[available] = old_code;\n        suffix[available] = first;\n        available++;\n\n        if ((available & code_mask) === 0 && available < MAX_STACK_SIZE) {\n          code_size++;\n          code_mask += available;\n        }\n      }\n\n      old_code = in_code;\n    } // Pop a pixel off the pixel stack.\n\n\n    top--;\n    dstPixels[pi++] = pixelStack[top];\n    i++;\n  }\n\n  for (i = pi; i < npix; i++) {\n    dstPixels[i] = 0; // clear missing pixels\n  }\n\n  return dstPixels;\n};\n\nexports.lzw = lzw;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/gifuct-js/lib/lzw.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}}],"sources":{"node_modules/gifuct-js/lib/lzw.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.lzw = void 0;\n\n/**\r\n * javascript port of java LZW decompression\r\n * Original java author url: https://gist.github.com/devunwired/4479231\r\n */\nvar lzw = function lzw(minCodeSize, data, pixelCount) {\n  var MAX_STACK_SIZE = 4096;\n  var nullCode = -1;\n  var npix = pixelCount;\n  var available, clear, code_mask, code_size, end_of_information, in_code, old_code, bits, code, i, datum, data_size, first, top, bi, pi;\n  var dstPixels = new Array(pixelCount);\n  var prefix = new Array(MAX_STACK_SIZE);\n  var suffix = new Array(MAX_STACK_SIZE);\n  var pixelStack = new Array(MAX_STACK_SIZE + 1); // Initialize GIF data stream decoder.\n\n  data_size = minCodeSize;\n  clear = 1 << data_size;\n  end_of_information = clear + 1;\n  available = clear + 2;\n  old_code = nullCode;\n  code_size = data_size + 1;\n  code_mask = (1 << code_size) - 1;\n\n  for (code = 0; code < clear; code++) {\n    prefix[code] = 0;\n    suffix[code] = code;\n  } // Decode GIF pixel stream.\n\n\n  var datum, bits, count, first, top, pi, bi;\n  datum = bits = count = first = top = pi = bi = 0;\n\n  for (i = 0; i < npix;) {\n    if (top === 0) {\n      if (bits < code_size) {\n        // get the next byte\n        datum += data[bi] << bits;\n        bits += 8;\n        bi++;\n        continue;\n      } // Get the next code.\n\n\n      code = datum & code_mask;\n      datum >>= code_size;\n      bits -= code_size; // Interpret the code\n\n      if (code > available || code == end_of_information) {\n        break;\n      }\n\n      if (code == clear) {\n        // Reset decoder.\n        code_size = data_size + 1;\n        code_mask = (1 << code_size) - 1;\n        available = clear + 2;\n        old_code = nullCode;\n        continue;\n      }\n\n      if (old_code == nullCode) {\n        pixelStack[top++] = suffix[code];\n        old_code = code;\n        first = code;\n        continue;\n      }\n\n      in_code = code;\n\n      if (code == available) {\n        pixelStack[top++] = first;\n        code = old_code;\n      }\n\n      while (code > clear) {\n        pixelStack[top++] = suffix[code];\n        code = prefix[code];\n      }\n\n      first = suffix[code] & 0xff;\n      pixelStack[top++] = first; // add a new string to the table, but only if space is available\n      // if not, just continue with current table until a clear code is found\n      // (deferred clear code implementation as per GIF spec)\n\n      if (available < MAX_STACK_SIZE) {\n        prefix[available] = old_code;\n        suffix[available] = first;\n        available++;\n\n        if ((available & code_mask) === 0 && available < MAX_STACK_SIZE) {\n          code_size++;\n          code_mask += available;\n        }\n      }\n\n      old_code = in_code;\n    } // Pop a pixel off the pixel stack.\n\n\n    top--;\n    dstPixels[pi++] = pixelStack[top];\n    i++;\n  }\n\n  for (i = pi; i < npix; i++) {\n    dstPixels[i] = 0; // clear missing pixels\n  }\n\n  return dstPixels;\n};\n\nexports.lzw = lzw;"},"lineCount":118}},"error":null,"hash":"b8dc65a6f2bf92ae55abe7f704d7623a","cacheData":{"env":{}}}